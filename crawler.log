2016-04-08 23:01:38,341 [Thread-0] INFO  UserCrawler - UserCrawler constructor.{}
2016-04-08 23:01:38,455 [Thread-0] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.log4j2.Log4j2Impl' adapter.{}
2016-04-08 23:01:38,806 [Thread-0] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.log4j2.Log4j2Impl' adapter.{}
2016-04-08 23:01:38,913 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - PooledDataSource forcefully closed/removed all connections.{}
2016-04-08 23:01:38,913 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - PooledDataSource forcefully closed/removed all connections.{}
2016-04-08 23:01:38,913 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - PooledDataSource forcefully closed/removed all connections.{}
2016-04-08 23:01:38,913 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - PooledDataSource forcefully closed/removed all connections.{}
2016-04-08 23:01:39,280 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Opening JDBC Connection{}
2016-04-08 23:01:40,350 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Created connection 456004698.{}
2016-04-08 23:01:40,351 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:01:40,361 [Thread-0] DEBUG User.getMaxUserId - ==>  Preparing: SELECT max(id) FROM user {}
2016-04-08 23:01:40,528 [Thread-0] DEBUG User.getMaxUserId - ==> Parameters: {}
2016-04-08 23:01:40,602 [Thread-0] TRACE User.getMaxUserId - <==    Columns: max(id){}
2016-04-08 23:01:40,603 [Thread-0] TRACE User.getMaxUserId - <==        Row: 247{}
2016-04-08 23:01:40,608 [Thread-0] DEBUG User.getMaxUserId - <==      Total: 1{}
2016-04-08 23:01:40,609 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:01:40,620 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:01:40,620 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Returned connection 456004698 to pool.{}
2016-04-08 23:01:40,620 [Thread-0] INFO  UserCrawler - UserCrawler has initialized{}
2016-04-08 23:01:57,850 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Opening JDBC Connection{}
2016-04-08 23:01:57,851 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Checked out connection 456004698 from pool.{}
2016-04-08 23:01:57,851 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:01:57,852 [Thread-0] DEBUG User.insertBatch - ==>  Preparing: INSERT INTO user (login, id, type, site_admin, name, company, location, email, public_repos, public_gists, followers, following, created_at, updated_at{}
2016-04-08 23:01:57,910 [Thread-0] DEBUG User.insertBatch - ==> Parameters: aditya(String), 248(Integer), User(String), 0(Integer), Aditya Chadha(String), null, New York(String), aditya@sublucid.com(String), 17(Integer), 15(Integer), 22(Integer), 8(Integer), 1202903741(Integer), 1458698765(Integer), agile(String), 249(Integer), User(String), 0(Integer), Mike Vincent(String), null, FTW, TX(String), mike@vincent.ws(String), 22(Integer), 39(Integer), 38(Integer), 94(Integer), 1202903882(Integer), 1458698811(Integer), wellbredgrapefruit(String), 250(Integer), User(String), 0(Integer), Tommy Morgan(String), Well-Bred Grapefruit(String), Atlanta, GA(String), tommy@wellbredgrapefruit.com(String), 15(Integer), 14(Integer), 62(Integer), 16(Integer), 1202905349(Integer), 1459950913(Integer), toretore(String), 251(Integer), User(String), 0(Integer), Tore Darell(String), 2750 FLESK(String), The Rubyera(String), toredarell@gmail.com(String), 37(Integer), 37(Integer), 30(Integer), 4(Integer), 1202907220(Integer), 1456497269(Integer), vangberg(String), 252(Integer), User(String), 0(Integer), Harry Vangberg(String), Firmafon(String), Copenhagen, Denmark(String), harry@vangberg.name(String), 53(Integer), 107(Integer), 89(Integer), 174(Integer), 1202907725(Integer), 1459303704(Integer), jchris(String), 253(Integer), User(String), 0(Integer), Chris Anderson(String), Document Coin(String), Portland, OR(String), jchris@gmail.com(String), 125(Integer), 85(Integer), 535(Integer), 42(Integer), 1202908098(Integer), 1459488008(Integer), gspederson(String), 254(Integer), User(String), 0(Integer), Greg Pederson(String), Nsight Web Development(String), Orlando, FL USA(String), Greg@nsightdevelopment.com(String), 7(Integer), 5(Integer), 8(Integer), 4(Integer), 1202908983(Integer), 1446556050(Integer), psq(String), 255(Integer), User(String), 0(Integer), Pascal(String), null, Saratoga, CA(String), null, 51(Integer), 0(Integer), 13(Integer), 0(Integer), 1202911233(Integer), 1459783816(Integer), andreimaxim(String), 256(Integer), User(String), 0(Integer), Andrei Maxim(String), Telmate(String), Bucharest, Romania(String), andrei@andreimaxim.ro(String), 14(Integer), 30(Integer), 34(Integer), 8(Integer), 1202914028(Integer), 1459493143(Integer), robbyrussell(String), 257(Integer), User(String), 0(Integer), Robby Russell(String), Planet Argon, LLC(String), Portland, Oregon(String), null, 27(Integer), 54(Integer), 1362(Integer), 29(Integer), 1202915083(Integer), 1456497269(Integer), kommen(String), 258(Integer), User(String), 0(Integer), Dieter Komendera(String), abloom(String), Vienna, Austria(String), dieter@komendera.com(String), 29(Integer), 17(Integer), 40(Integer), 5(Integer), 1202915218(Integer), 1458266219(Integer), protocool(String), 259(Integer), User(String), 0(Integer), Trevor Squires(String), MartianCraft(String), Comox Valley, BC, Canada(String), null, 6(Integer), 8(Integer), 44(Integer), 0(Integer), 1202915388(Integer), 1458957924(Integer), maddox(String), 260(Integer), User(String), 1(Integer), Jon Maddox(String), GitHub, Inc.(String), Richmond, Va(String), jon@jonmaddox.com(String), 96(Integer), 74(Integer), 507(Integer), 5(Integer), 1202916811(Integer), 1458523506(Integer), jswanner(String), 261(Integer), User(String), 0(Integer), Jacob Swanner(String), Envy Labs(String), Orlando, FL(String), swanner@gmail.com(String), 36(Integer), 43(Integer), 49(Integer), 7(Integer), 1202921825(Integer), 1459738461(Integer), kastner(String), 262(Integer), User(String), 0(Integer), Erik Kastner(String), null, New Jersey(String), kastner@gmail.com(String), 120(Integer), 171(Integer), 163(Integer), 30(Integer), 1202923556(Integer), 1459044304(Integer), halorgium(String), 263(Integer), User(String), 0(Integer), Tim Carey-Smith(String), null, Floating down a mountain either by ski or foot(String), null, 266(Integer), 36(Integer), 149(Integer), 6(Integer), 1202924867(Integer), 1460020261(Integer), merb(String), 264(Integer), Organization(String), 0(Integer), Merb(String), null, null, null, 14(Integer), 0(Integer), 0(Integer), 0(Integer), 1202925927(Integer), 1456497269(Integer), lachie(String), 265(Integer), User(String), 0(Integer), Lachie Cox(String), Blake Education(String), Sydney, Australia(String), lachiec@gmail.com(String), 73(Integer), 91(Integer), 60(Integer), 28(Integer), 1202927771(Integer), 1459792368(Integer), anildigital(String), 266(Integer), User(String), 0(Integer), Anil Wadghule(String), Equal Experts(String), Pune, India(String), anildigital@gmail.com(String), 65(Integer), 240(Integer), 59(Integer), 94(Integer), 1202928551(Integer), 1459132512(Integer), cwsaylor(String), 267(Integer), User(String), 0(Integer), Chris Saylor(String), http://todobebe.com(String), San Francisco, CA(String), cwsaylor@gmail.com(String), 17(Integer), 62(Integer), 33(Integer), 21(Integer), 1202933015(Integer), 1460081238(Integer), pdsphil(String), 268(Integer), User(String), 0(Integer), Phil Ripperger(String), null, Colorado Springs, CO(String), phil@pdatasolutions.com(String), 15(Integer), 3(Integer), 19(Integer), 7(Integer), 1202934540(Integer), 1459237044(Integer), kamal(String), 269(Integer), User(String), 0(Integer), Kamal Fariz Mahyuddin(String), Bitfluent(String), Kuala Lumpur, Malaysia(String), kamal.fariz@gmail.com(String), 36(Integer), 46(Integer), 112(Integer), 62(Integer), 1202935342(Integer), 1458563481(Integer), bleything(String), 270(Integer), User(String), 0(Integer), Ben Bleything(String), null, Seattle, Washington(String), ben@bleything.net(String), 59(Integer), 30(Integer), 146(Integer), 38(Integer), 1202935698(Integer), 1458612634(Integer), pergesu(String), 271(Integer), User(String), 0(Integer), null, null, null, pat.maddox@gmail.com(String), 0(Integer), 0(Integer), 4(Integer), 0(Integer), 1202939716(Integer), 1428579523(Integer), caplis(String), 272(Integer), User(String), 0(Integer), Tim(String), null, Berkeley, CA(String), null, 3(Integer), 0(Integer), 8(Integer), 8(Integer), 1202944784(Integer), 1456497269(Integer), jqr(String), 273(Integer), User(String), 0(Integer), Elijah Miller(String), Expected Behavior(String), Key West, FL, USA(String), elijah.miller@gmail.com(String), 57(Integer), 85(Integer), 116(Integer), 73(Integer), 1202971314(Integer), 1459649644(Integer), mattslack(String), 274(Integer), User(String), 0(Integer), Matt Slack(String), null, Michigan(String), null, 10(Integer), 13(Integer), 18(Integer), 7(Integer), 1202973010(Integer), 1459877989(Integer), tjogin(String), 275(Integer), User(String), 0(Integer), Tomas Jogin(String), null, Sweden(String), tomas@jogin.com(String), 4(Integer), 5(Integer), 11(Integer), 6(Integer), 1202980293(Integer), 1456497269(Integer), robbevan(String), 276(Integer), User(String), 0(Integer), Rob Bevan(String), XPT(String), London(String), robbevan@xpt.com(String), 29(Integer), 4(Integer), 14(Integer), 22(Integer), 1202980368(Integer), 1458289155(Integer), marten(String), 277(Integer), User(String), 0(Integer), Marten Veldthuis(String), Zooniverse(String), Oxford, UK(String), marten@veldthuis.com(String), 61(Integer), 29(Integer), 13(Integer), 3(Integer), 1202980678(Integer), 1459822524(Integer){}
2016-04-08 23:01:57,918 [Thread-0] DEBUG User.insertBatch - <==    Updates: 30{}
2016-04-08 23:01:57,919 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Committing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:01:57,921 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:01:57,922 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:01:57,922 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Returned connection 456004698 to pool.{}
2016-04-08 23:02:12,516 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Opening JDBC Connection{}
2016-04-08 23:02:12,516 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Checked out connection 456004698 from pool.{}
2016-04-08 23:02:12,516 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:12,519 [Thread-0] DEBUG User.insertBatch - ==>  Preparing: INSERT INTO user (login, id, type, site_admin, name, company, location, email, public_repos, public_gists, followers, following, created_at, updated_at{}
2016-04-08 23:02:12,537 [Thread-0] DEBUG User.insertBatch - ==> Parameters: gnufied(String), 278(Integer), User(String), 0(Integer), Hemant Kumar(String), Yelp(String), Atlanta, US(String), hemant@codemancers.com(String), 115(Integer), 115(Integer), 130(Integer), 100(Integer), 1202982890(Integer), 1459997753(Integer), hoverbird(String), 279(Integer), User(String), 0(Integer), Patrick Ewing(String), Campo Santo(String), San Francisco, CA(String), patrick.henry.ewing@gmail.com(String), 46(Integer), 18(Integer), 336(Integer), 124(Integer), 1202983792(Integer), 1459886269(Integer), remi(String), 280(Integer), User(String), 0(Integer), remi Taylor(String), Google(String), Seattle, WA(String), null, 78(Integer), 99(Integer), 154(Integer), 42(Integer), 1202986771(Integer), 1459333867(Integer), joshuamckenty(String), 281(Integer), User(String), 0(Integer), Joshua McKenty(String), Pivotal, Inc.(String), San Francisco, CA(String), jmckenty@gmail.com(String), 78(Integer), 9(Integer), 61(Integer), 56(Integer), 1202989561(Integer), 1459941667(Integer), dfl(String), 282(Integer), User(String), 0(Integer), David Lowenfels(String), Internaut Design(String), San Francisco, CA USA(String), null, 35(Integer), 5(Integer), 16(Integer), 4(Integer), 1202999590(Integer), 1457835133(Integer), floydprice(String), 283(Integer), User(String), 0(Integer), Floyd Price(String), null, UK(String), null, 35(Integer), 2(Integer), 7(Integer), 0(Integer), 1203001309(Integer), 1460080062(Integer), alialliallie(String), 284(Integer), User(String), 0(Integer), Allison Lara(String), Simple(String), Portland, OR(String), allison@github.alliesaur.us(String), 18(Integer), 2(Integer), 16(Integer), 8(Integer), 1203001605(Integer), 1458656313(Integer), activestylus(String), 285(Integer), User(String), 0(Integer), null, null, null, null, 45(Integer), 9(Integer), 16(Integer), 3(Integer), 1203011030(Integer), 1460070980(Integer), archfear(String), 286(Integer), User(String), 0(Integer), Dan Dofter(String), null, San Francisco, CA(String), dan@dofter.com(String), 19(Integer), 12(Integer), 42(Integer), 7(Integer), 1203024822(Integer), 1459131157(Integer), mudge(String), 287(Integer), User(String), 0(Integer), Paul Mucur(String), null, null, null, 57(Integer), 99(Integer), 64(Integer), 15(Integer), 1203038111(Integer), 1457057453(Integer), johnny(String), 288(Integer), User(String), 0(Integer), Jonas von Andrian(String), null, null, null, 22(Integer), 6(Integer), 34(Integer), 5(Integer), 1203042826(Integer), 1459253348(Integer), ss(String), 290(Integer), User(String), 0(Integer), Scott Steadman(String), null, Los Angeles, CA(String), github@stdmn.com(String), 16(Integer), 0(Integer), 24(Integer), 29(Integer), 1203054908(Integer), 1456497269(Integer), ciconia(String), 291(Integer), User(String), 0(Integer), Sharon Rosner(String), null, Alsace, France(String), ciconia@gmail.com(String), 16(Integer), 5(Integer), 19(Integer), 33(Integer), 1203055829(Integer), 1459862636(Integer), doudou(String), 292(Integer), User(String), 0(Integer), Sylvain Joyeux(String), null, null, sylvain.joyeux@m4x.org(String), 48(Integer), 11(Integer), 17(Integer), 0(Integer), 1203060082(Integer), 1457590490(Integer), david(String), 293(Integer), User(String), 0(Integer), David Leal(String), Mojo Tech(String), Portugal(String), null, 12(Integer), 11(Integer), 27(Integer), 1(Integer), 1203062534(Integer), 1459330926(Integer), pedromg(String), 294(Integer), User(String), 0(Integer), pedro mg(String), tquadrado.com(String), Porto(String), pedro.mota@gmail.com(String), 41(Integer), 20(Integer), 24(Integer), 40(Integer), 1203065477(Integer), 1458203179(Integer), wayne(String), 295(Integer), User(String), 0(Integer), Wayne(String), Personal(String), Home(String), null, 1(Integer), 0(Integer), 4(Integer), 0(Integer), 1203066770(Integer), 1451759277(Integer), steve(String), 296(Integer), User(String), 0(Integer), Steve Sanderson(String), Rackspace(String), Austin(String), mail@stevesanderson.com(String), 28(Integer), 0(Integer), 13(Integer), 0(Integer), 1203069364(Integer), 1459432588(Integer), mark(String), 297(Integer), User(String), 0(Integer), Mark Josef(String), Division by Zero, LLC(String), Buffalo, NY(String), McPhage@gmail.com(String), 39(Integer), 56(Integer), 34(Integer), 19(Integer), 1203071336(Integer), 1459562382(Integer), ambethia(String), 298(Integer), User(String), 0(Integer), Jason L Perry(String), The Iron Yard(String), St Petersburg, FL(String), jasper@ambethia.com(String), 123(Integer), 109(Integer), 115(Integer), 51(Integer), 1203072944(Integer), 1460014426(Integer), halfbyte(String), 299(Integer), User(String), 0(Integer), Jan Krutisch(String), null, Hamburg, Germany(String), jan@krutisch.de(String), 159(Integer), 28(Integer), 129(Integer), 6(Integer), 1203078866(Integer), 1457575777(Integer), cannikin(String), 300(Integer), User(String), 0(Integer), Rob Cameron(String), null, San Diego, CA(String), cannikinn@gmail.com(String), 91(Integer), 61(Integer), 20(Integer), 1(Integer), 1203080683(Integer), 1459841311(Integer), anthonylewis(String), 301(Integer), User(String), 0(Integer), Anthony Lewis(String), null, Austin, TX(String), me@anthonylewis.com(String), 46(Integer), 6(Integer), 33(Integer), 0(Integer), 1203084266(Integer), 1459873528(Integer), markcornick(String), 302(Integer), User(String), 0(Integer), Mark Cornick(String), Learning Objects(String), Washington, DC(String), null, 16(Integer), 8(Integer), 16(Integer), 0(Integer), 1203086598(Integer), 1460009819(Integer), itfische(String), 303(Integer), User(String), 0(Integer), Ian(String), Apportable(String), San Francisco(String), null, 9(Integer), 1(Integer), 16(Integer), 1(Integer), 1203087970(Integer), 1457126031(Integer), ivoencarnacao(String), 304(Integer), User(String), 0(Integer), null, null, null, null, 6(Integer), 0(Integer), 4(Integer), 15(Integer), 1203100790(Integer), 1456497269(Integer), mcg(String), 305(Integer), User(String), 0(Integer), Matthew(String), LivingSocial(String), Charleston SC(String), mcg@braintube.com(String), 22(Integer), 4(Integer), 18(Integer), 4(Integer), 1203101772(Integer), 1456497269(Integer), sco(String), 306(Integer), User(String), 0(Integer), Scott Raymond(String), Airbnb(String), San Francisco, California(String), sco@scottraymond.net(String), 15(Integer), 24(Integer), 327(Integer), 293(Integer), 1203102165(Integer), 1459482079(Integer), norio(String), 307(Integer), User(String), 0(Integer), Norio Shimizu(String), null, Japan(String), null, 3(Integer), 8(Integer), 73(Integer), 74(Integer), 1203107734(Integer), 1457488407(Integer), anttih(String), 308(Integer), User(String), 0(Integer), Antti Holvikari(String), Reaktor(String), Helsinki, Finland(String), anttih@gmail.com(String), 42(Integer), 11(Integer), 31(Integer), 25(Integer), 1203126406(Integer), 1459757426(Integer){}
2016-04-08 23:02:12,543 [Thread-0] DEBUG User.insertBatch - <==    Updates: 30{}
2016-04-08 23:02:12,545 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Committing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:12,552 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:12,553 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:12,553 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Returned connection 456004698 to pool.{}
2016-04-08 23:02:25,883 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Opening JDBC Connection{}
2016-04-08 23:02:25,883 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Checked out connection 456004698 from pool.{}
2016-04-08 23:02:25,883 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:25,887 [Thread-0] DEBUG User.insertBatch - ==>  Preparing: INSERT INTO user (login, id, type, site_admin, name, company, location, email, public_repos, public_gists, followers, following, created_at, updated_at{}
2016-04-08 23:02:25,899 [Thread-0] DEBUG User.insertBatch - ==> Parameters: vintrepid(String), 309(Integer), User(String), 0(Integer), Vince Nibler(String), Lotus Labs(String), Lotus, CA(String), null, 38(Integer), 3(Integer), 2(Integer), 0(Integer), 1203129578(Integer), 1459564275(Integer), bigfleet(String), 310(Integer), User(String), 0(Integer), Jim Van Fleet(String), Levvel LLC(String), Charlotte, NC(String), jim@jimvanfleet.com(String), 22(Integer), 54(Integer), 93(Integer), 21(Integer), 1203139663(Integer), 1459419475(Integer), lypanov(String), 311(Integer), User(String), 0(Integer), Alexander Kellett(String), null, Voorburg, Netherlands(String), null, 36(Integer), 16(Integer), 5(Integer), 0(Integer), 1203143859(Integer), 1458463136(Integer), ropiku(String), 312(Integer), User(String), 0(Integer), Mihai Anca(String), Envoy(String), London, UK(String), github@mihaia.com(String), 8(Integer), 10(Integer), 45(Integer), 45(Integer), 1203143934(Integer), 1459848465(Integer), rds(String), 313(Integer), User(String), 0(Integer), Rich(String), null, UK(String), null, 22(Integer), 4(Integer), 3(Integer), 0(Integer), 1203146147(Integer), 1456497270(Integer), zmoazeni(String), 314(Integer), User(String), 0(Integer), Zach Moazeni(String), Harvest(String), Rapid City, MI(String), zach.moazeni@gmail.com(String), 41(Integer), 59(Integer), 102(Integer), 35(Integer), 1203149357(Integer), 1456497270(Integer), edwinmoss(String), 315(Integer), User(String), 0(Integer), Edwin Moss(String), www.4ssoM.com(String), Utah(String), ed.moss@4ssom.com(String), 26(Integer), 1(Integer), 8(Integer), 1(Integer), 1203153600(Integer), 1453360723(Integer), tomfarm(String), 316(Integer), User(String), 0(Integer), Thomas Winkler(String), formrausch GmbH(String), Koblenz, Germany(String), tomfarm@gmail.com(String), 18(Integer), 3(Integer), 17(Integer), 10(Integer), 1203154839(Integer), 1456497270(Integer), SoreGums(String), 317(Integer), User(String), 0(Integer), Nicholas Orr(String), null, Perth, Australia(String), null, 12(Integer), 80(Integer), 3(Integer), 1(Integer), 1203154924(Integer), 1460040436(Integer), bumi(String), 318(Integer), User(String), 0(Integer), Michael Bumann(String), null, where.is.michaelbumann.com(String), hello@michaelbumann.com(String), 81(Integer), 59(Integer), 171(Integer), 270(Integer), 1203155975(Integer), 1459582262(Integer), dag(String), 319(Integer), User(String), 0(Integer), Dag Odenhall(String), null, Sweden(String), dag.odenhall@gmail.com(String), 98(Integer), 2(Integer), 63(Integer), 30(Integer), 1203156974(Integer), 1458280537(Integer), ruckus(String), 320(Integer), User(String), 0(Integer), Cody Caughlan(String), null, San Francisco, CA.(String), toolbag@gmail.com(String), 27(Integer), 88(Integer), 42(Integer), 21(Integer), 1203157571(Integer), 1460080468(Integer), mlins(String), 321(Integer), User(String), 0(Integer), Matt Lins(String), null, Madison, WI(String), mattlins@gmail.com(String), 28(Integer), 20(Integer), 8(Integer), 3(Integer), 1203161525(Integer), 1460098666(Integer), luke(String), 322(Integer), User(String), 0(Integer), null, null, null, null, 14(Integer), 9(Integer), 18(Integer), 0(Integer), 1203162320(Integer), 1459303665(Integer), labria(String), 323(Integer), User(String), 0(Integer), Dimitri Krassovski(String), Wix.com(String), null, labria@startika.com(String), 19(Integer), 15(Integer), 41(Integer), 9(Integer), 1203166512(Integer), 1457748449(Integer), raymorgan(String), 324(Integer), User(String), 0(Integer), null, null, null, null, 1(Integer), 0(Integer), 4(Integer), 0(Integer), 1203166895(Integer), 1428579523(Integer), edward(String), 325(Integer), User(String), 0(Integer), Edward Ocampo-Gooding(String), Shopify(String), Ottawa, Ontario, Canada(String), hello@edward.bio(String), 99(Integer), 80(Integer), 137(Integer), 62(Integer), 1203169701(Integer), 1460097311(Integer), dsiem(String), 326(Integer), User(String), 0(Integer), Daniel(String), null, null, null, 3(Integer), 0(Integer), 2(Integer), 0(Integer), 1203170178(Integer), 1446165229(Integer), talaris(String), 327(Integer), User(String), 0(Integer), Kyle Burckhard(String), VorpalCode(String), WA, USA(String), kyle@vorpalcode.com(String), 9(Integer), 12(Integer), 11(Integer), 13(Integer), 1203172520(Integer), 1458841502(Integer), jrun(String), 328(Integer), User(String), 0(Integer), Jeremy Burks(String), 403 Labs, LLC(String), Milwaukee, WI(String), jeremy@zomgwat.com(String), 28(Integer), 15(Integer), 18(Integer), 10(Integer), 1203174659(Integer), 1459948906(Integer), chris(String), 329(Integer), User(String), 0(Integer), Chris Bailey(String), HotelTonight(String), Eugene, OR and San Francisco, CA(String), chris@hoteltonight.com(String), 24(Integer), 30(Integer), 39(Integer), 0(Integer), 1203192791(Integer), 1458767264(Integer), thejohnny(String), 330(Integer), User(String), 0(Integer), null, null, null, null, 11(Integer), 7(Integer), 10(Integer), 3(Integer), 1203197554(Integer), 1456497270(Integer), vic(String), 331(Integer), User(String), 0(Integer), Victor Hugo Borja(String), Software Villain(String), Mexico City(String), vborja@apache.org(String), 168(Integer), 52(Integer), 184(Integer), 429(Integer), 1203198538(Integer), 1460041029(Integer), thelibrarian(String), 332(Integer), User(String), 0(Integer), Tony Kemp(String), null, null, null, 7(Integer), 5(Integer), 5(Integer), 2(Integer), 1203208150(Integer), 1460082636(Integer), harukizaemon(String), 333(Integer), User(String), 0(Integer), Simon Harris(String), null, Tylden, Victoria, Australia(String), null, 3(Integer), 91(Integer), 72(Integer), 1(Integer), 1203214900(Integer), 1459831466(Integer), ttcremers(String), 334(Integer), User(String), 0(Integer), Thomas Cremers(String), Vicinity Software(String), The Hague(String), info@vicinitysoftware.com(String), 25(Integer), 1(Integer), 4(Integer), 1(Integer), 1203222269(Integer), 1459746937(Integer), bitbckt(String), 335(Integer), User(String), 0(Integer), Brandon Mitchell(String), null, San Francisco, CA United States(String), brandon@thewholedoubt.com(String), 10(Integer), 21(Integer), 44(Integer), 12(Integer), 1203248640(Integer), 1457747170(Integer), brupm(String), 336(Integer), User(String), 0(Integer), Bruno Miranda(String), null, San Diego, CA(String), bruno@bopia.com(String), 26(Integer), 5(Integer), 34(Integer), 30(Integer), 1203248974(Integer), 1459735340(Integer), v3rb0(String), 337(Integer), User(String), 0(Integer), null, null, null, null, 1(Integer), 0(Integer), 3(Integer), 5(Integer), 1203249886(Integer), 1458189393(Integer), hchoroomi(String), 338(Integer), User(String), 0(Integer), Husein Choroomi(String), Choroomi Holdings, Inc. (String), Bend, OR(String), hchoroomi@gmail.com(String), 44(Integer), 59(Integer), 35(Integer), 37(Integer), 1203249924(Integer), 1456497270(Integer){}
2016-04-08 23:02:25,904 [Thread-0] DEBUG User.insertBatch - <==    Updates: 30{}
2016-04-08 23:02:25,904 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Committing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:25,910 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:25,910 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:25,910 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Returned connection 456004698 to pool.{}
2016-04-08 23:02:40,909 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Opening JDBC Connection{}
2016-04-08 23:02:40,909 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Checked out connection 456004698 from pool.{}
2016-04-08 23:02:40,913 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:40,914 [Thread-0] DEBUG User.insertBatch - ==>  Preparing: INSERT INTO user (login, id, type, site_admin, name, company, location, email, public_repos, public_gists, followers, following, created_at, updated_at{}
2016-04-08 23:02:40,925 [Thread-0] DEBUG User.insertBatch - ==> Parameters: igouss(String), 339(Integer), User(String), 0(Integer), Iouri Goussev(String), NAXSoft(String), Montreal, QC(String), null, 15(Integer), 1(Integer), 12(Integer), 7(Integer), 1203249999(Integer), 1458637992(Integer), jamesmacaulay(String), 340(Integer), User(String), 0(Integer), James MacAulay(String), Shopify(String), Toronto(String), null, 76(Integer), 45(Integer), 107(Integer), 0(Integer), 1203250275(Integer), 1460092593(Integer), jacobeus(String), 341(Integer), User(String), 0(Integer), Nicolas Jacobeus(String), Belighted(String), Louvain-la-Neuve, Belgium(String), nicolas.jacobeus@belighted.com(String), 8(Integer), 1(Integer), 17(Integer), 0(Integer), 1203250334(Integer), 1459723081(Integer), djd(String), 342(Integer), User(String), 0(Integer), DJ Davis(String), null, CA(String), djd@davisca.org(String), 2(Integer), 0(Integer), 3(Integer), 0(Integer), 1203250495(Integer), 1456497270(Integer), octave(String), 343(Integer), User(String), 0(Integer), Octave Zangs(String), null, Lausanne, Switzerland(String), null, 3(Integer), 2(Integer), 14(Integer), 3(Integer), 1203251135(Integer), 1456497270(Integer), damon(String), 344(Integer), User(String), 0(Integer), Damon Clinkscales(String), http://investorsheets.com(String), Austin, TX(String), null, 15(Integer), 29(Integer), 110(Integer), 71(Integer), 1203251386(Integer), 1456497270(Integer), sbusso(String), 346(Integer), User(String), 0(Integer), Stéphane Busso(String), TurfMedia(String), Paris (France), Chiang Mai (Thailand)(String), stephane.busso@gmail.com(String), 276(Integer), 47(Integer), 35(Integer), 31(Integer), 1203252287(Integer), 1460013019(Integer), tobi(String), 347(Integer), User(String), 0(Integer), Tobias Lütke(String), Shopify(String), Ottawa, Canada(String), tobi@shopify.com(String), 49(Integer), 33(Integer), 571(Integer), 44(Integer), 1203253118(Integer), 1459343376(Integer), raggi(String), 348(Integer), User(String), 0(Integer), James Tucker(String), Google(String), California or Bermuda(String), jftucker@gmail.com(String), 129(Integer), 77(Integer), 376(Integer), 84(Integer), 1203253251(Integer), 1459697274(Integer), tooky(String), 349(Integer), User(String), 0(Integer), Steve Tooke(String), BoxJump(String), Hampshire, United Kingdom(String), steve+github@boxjump.co.uk(String), 100(Integer), 57(Integer), 38(Integer), 21(Integer), 1203254238(Integer), 1459302700(Integer), aurelian(String), 350(Integer), User(String), 0(Integer), Aurelian Oancea(String), null, Barcelona, Spain(String), null, 29(Integer), 58(Integer), 27(Integer), 10(Integer), 1203255169(Integer), 1456497270(Integer), cnantais(String), 351(Integer), User(String), 0(Integer), Chad Nantais(String), zKron Technologies(String), null, cnantais@gmail.com(String), 6(Integer), 0(Integer), 2(Integer), 0(Integer), 1203257624(Integer), 1456497270(Integer), gthoppae(String), 352(Integer), User(String), 0(Integer), Gnanasekaran Thoppae(String), null, Lausanne, Switzerland(String), null, 3(Integer), 0(Integer), 4(Integer), 3(Integer), 1203260451(Integer), 1458523932(Integer), lukemelia(String), 353(Integer), User(String), 0(Integer), Luke Melia(String), Yapp(String), New York, NY(String), luke@lukemelia.com(String), 86(Integer), 68(Integer), 179(Integer), 8(Integer), 1203261816(Integer), 1459573961(Integer), ncdc(String), 354(Integer), User(String), 0(Integer), Andy Goldstein(String), Red Hat(String), Rockville, MD(String), null, 76(Integer), 422(Integer), 27(Integer), 8(Integer), 1203267918(Integer), 1458032429(Integer), bendik(String), 355(Integer), User(String), 0(Integer), Bendik Aagaard Lynghaug(String), ♻️(String), ⚓️(String), bendik.lynghaug@gmail.com(String), 6(Integer), 0(Integer), 10(Integer), 26(Integer), 1203269111(Integer), 1460094489(Integer), sbraford(String), 356(Integer), User(String), 0(Integer), Shanti Braford(String), Redux Apps(String), Portland, OR(String), shantibraford@gmail.com(String), 5(Integer), 5(Integer), 9(Integer), 11(Integer), 1203288599(Integer), 1458870954(Integer), mpalmer(String), 357(Integer), User(String), 0(Integer), Matt Palmer(String), null, null, null, 111(Integer), 11(Integer), 57(Integer), 0(Integer), 1203291219(Integer), 1458649341(Integer), jens(String), 358(Integer), User(String), 0(Integer), Jens Norrgrann(String), Bukowskis(String), Stockholm / Sweden(String), jens.norrgrann@bukowskis.com(String), 9(Integer), 13(Integer), 7(Integer), 1(Integer), 1203298083(Integer), 1457681584(Integer), moneyspyder(String), 359(Integer), Organization(String), 0(Integer), Moneyspyder(String), null, London(String), null, 41(Integer), 0(Integer), 0(Integer), 0(Integer), 1203301158(Integer), 1459388506(Integer), tslocke(String), 360(Integer), User(String), 0(Integer), Tom Locke(String), null, UK(String), null, 38(Integer), 20(Integer), 71(Integer), 1(Integer), 1203305873(Integer), 1456497270(Integer), deletepls(String), 361(Integer), User(String), 0(Integer), null, null, null, null, 0(Integer), 0(Integer), 2(Integer), 0(Integer), 1203311486(Integer), 1428579523(Integer), jellybob(String), 362(Integer), User(String), 0(Integer), Jon Wood(String), Hubbub Deliveries(String), Staines, UK (Home of Ali G)(String), jon@ninjagiraffes.co.uk(String), 38(Integer), 29(Integer), 23(Integer), 6(Integer), 1203312595(Integer), 1459498120(Integer), mascarenhas(String), 363(Integer), User(String), 0(Integer), Fabio Mascarenhas(String), DCC, UFRJ(String), Rio de Janeiro, Brazil(String), mascarenhas@acm.org(String), 17(Integer), 21(Integer), 57(Integer), 13(Integer), 1203325077(Integer), 1457583034(Integer), zroetemeyer(String), 364(Integer), User(String), 0(Integer), null, null, null, null, 0(Integer), 0(Integer), 2(Integer), 0(Integer), 1203325115(Integer), 1428579523(Integer), pius(String), 365(Integer), User(String), 0(Integer), Pius Uzamere(String), Ether(String), San Francisco, CA(String), pius@alum.mit.edu(String), 76(Integer), 35(Integer), 52(Integer), 43(Integer), 1203325218(Integer), 1458611015(Integer), nullstyle(String), 366(Integer), User(String), 0(Integer), Scott Fleckenstein(String), null, San Carlos, CA(String), nullstyle@gmail.com(String), 83(Integer), 30(Integer), 76(Integer), 9(Integer), 1203325238(Integer), 1459753614(Integer), smogzer(String), 367(Integer), User(String), 0(Integer), null, null, null, null, 0(Integer), 0(Integer), 2(Integer), 0(Integer), 1203325264(Integer), 1428579523(Integer), guillaume(String), 368(Integer), User(String), 0(Integer), Guillaume Carbonneau(String), null, null, guillaume.carbonneau@gmail.com(String), 14(Integer), 0(Integer), 5(Integer), 4(Integer), 1203325448(Integer), 1458129033(Integer), samaaron(String), 369(Integer), User(String), 0(Integer), Sam Aaron(String), University of Cambridge(String), Cambridge, UK(String), samaaron@gmail.com(String), 91(Integer), 118(Integer), 533(Integer), 28(Integer), 1203325965(Integer), 1458828181(Integer){}
2016-04-08 23:02:40,931 [Thread-0] DEBUG User.insertBatch - <==    Updates: 30{}
2016-04-08 23:02:40,931 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Committing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:40,933 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:40,934 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:40,934 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Returned connection 456004698 to pool.{}
2016-04-08 23:02:53,799 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Opening JDBC Connection{}
2016-04-08 23:02:53,799 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Checked out connection 456004698 from pool.{}
2016-04-08 23:02:53,799 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:53,803 [Thread-0] DEBUG User.insertBatch - ==>  Preparing: INSERT INTO user (login, id, type, site_admin, name, company, location, email, public_repos, public_gists, followers, following, created_at, updated_at{}
2016-04-08 23:02:53,813 [Thread-0] DEBUG User.insertBatch - ==> Parameters: endersonmaia(String), 370(Integer), User(String), 0(Integer), Enderson Tadeu S. Maia(String), null, Arapiraca, AL, Brazil(String), null, 30(Integer), 6(Integer), 29(Integer), 29(Integer), 1203326006(Integer), 1458141783(Integer), flowers(String), 371(Integer), User(String), 0(Integer), Flowers in Space(String), Flowers in Space(String), Sevilla, Spain(String), developers@flowersinspace.com(String), 3(Integer), 1(Integer), 7(Integer), 0(Integer), 1203326257(Integer), 1428579523(Integer), adamlogic(String), 372(Integer), User(String), 0(Integer), Adam McCrea(String), Real HQ(String), Columbus, Ohio(String), adam@adamlogic.com(String), 56(Integer), 26(Integer), 48(Integer), 0(Integer), 1203326622(Integer), 1459823057(Integer), alx(String), 373(Integer), User(String), 0(Integer), Alexandre Girard(String), Freelance(String), Toulouse, France(String), git@alexgirard.com(String), 170(Integer), 82(Integer), 89(Integer), 39(Integer), 1203326911(Integer), 1459734496(Integer), sproutit(String), 374(Integer), Organization(String), 0(Integer), Sproutit/SproutCore(String), null, Los Altos, CA(String), null, 21(Integer), 60(Integer), 0(Integer), 0(Integer), 1203327175(Integer), 1456497270(Integer), augustl(String), 375(Integer), User(String), 0(Integer), August Lilleaas(String), null, Oslo, Norway(String), august@augustl.com(String), 29(Integer), 194(Integer), 170(Integer), 0(Integer), 1203328391(Integer), 1458918459(Integer), eb1024(String), 376(Integer), User(String), 0(Integer), null, null, null, null, 1(Integer), 4(Integer), 2(Integer), 0(Integer), 1203328395(Integer), 1428579523(Integer), snowape(String), 377(Integer), User(String), 0(Integer), Dan Bradley(String), null, null, null, 3(Integer), 0(Integer), 2(Integer), 1(Integer), 1203328417(Integer), 1456497270(Integer), tpope(String), 378(Integer), User(String), 0(Integer), Tim Pope(String), null, Brooklyn, NY(String), github@tpope.org(String), 80(Integer), 48(Integer), 7320(Integer), 21(Integer), 1203329335(Integer), 1459339008(Integer), methodmissing(String), 379(Integer), User(String), 0(Integer), Lourens Naudé(String), Bear Metal OÜ, tunemygc.com(String), Funchal, Madeira, Portugal(String), lourens@methodmissing.com(String), 91(Integer), 264(Integer), 241(Integer), 184(Integer), 1203329563(Integer), 1459389217(Integer), mariusz(String), 380(Integer), User(String), 0(Integer), Mariusz Cieśla(String), null, Berlin(String), mariusz@dotmariusz.net(String), 30(Integer), 29(Integer), 48(Integer), 4(Integer), 1203329991(Integer), 1456497270(Integer), mazebuhu(String), 381(Integer), User(String), 0(Integer), Martin Palma(String), null, null, null, 19(Integer), 4(Integer), 9(Integer), 7(Integer), 1203330391(Integer), 1458942949(Integer), garyblessington(String), 382(Integer), User(String), 0(Integer), Gary Blessington(String), Planet Argon(String), Portland, OR(String), garyblessington@gmail.com(String), 5(Integer), 0(Integer), 9(Integer), 0(Integer), 1203330631(Integer), 1456497270(Integer), kangax(String), 383(Integer), User(String), 0(Integer), Juriy Zaytsev(String), Facebook(String), New York(String), kangax@gmail.com(String), 68(Integer), 112(Integer), 1694(Integer), 16(Integer), 1203330904(Integer), 1459425089(Integer), sd(String), 384(Integer), User(String), 0(Integer), Sebastian Delmont(String), ArepaLabs(String), New York City(String), sd@notso.net(String), 34(Integer), 14(Integer), 98(Integer), 0(Integer), 1203332293(Integer), 1457747418(Integer), drew(String), 385(Integer), User(String), 0(Integer), Drew Newberry(String), Surfline.com(String), San Diego, CA(String), dnewberry@gmail.com(String), 3(Integer), 4(Integer), 12(Integer), 4(Integer), 1203332666(Integer), 1459514843(Integer), brainopia(String), 386(Integer), User(String), 0(Integer), Ravil Bayramgalin(String), Evil Martians(String), Saint-Petersburg, Russia(String), brainopia@evilmartians.com(String), 60(Integer), 78(Integer), 135(Integer), 18(Integer), 1203333723(Integer), 1458347482(Integer), wvl(String), 387(Integer), User(String), 0(Integer), Wayne Larsen(String), null, Ottawa(String), wayne@larsen.st(String), 41(Integer), 11(Integer), 16(Integer), 11(Integer), 1203337777(Integer), 1458798496(Integer), therealadam(String), 388(Integer), User(String), 0(Integer), Adam Keys(String), LivingSocial(String), Austin, TX(String), null, 53(Integer), 30(Integer), 171(Integer), 121(Integer), 1203342360(Integer), 1459584954(Integer), therubymug(String), 389(Integer), User(String), 0(Integer), Rogelio J. Samour(String), Goldstar(String), Portland, Oregon(String), rogelio@therubymug.com(String), 14(Integer), 7(Integer), 75(Integer), 8(Integer), 1203342508(Integer), 1459707794(Integer), chrisgriffin(String), 390(Integer), User(String), 0(Integer), Chris Griffin(String), Fullscreen(String), Los Angeles, CA(String), me@chrisgriffin.org(String), 1(Integer), 1(Integer), 16(Integer), 16(Integer), 1203342786(Integer), 1459649385(Integer), graemepa(String), 391(Integer), User(String), 0(Integer), null, null, null, null, 0(Integer), 0(Integer), 4(Integer), 0(Integer), 1203342870(Integer), 1428579523(Integer), jasonherald(String), 392(Integer), User(String), 0(Integer), Jason Herald(String), Jason B Herald(String), Christiansburg, VA(String), jason.herald@gmail.com(String), 5(Integer), 1(Integer), 7(Integer), 8(Integer), 1203343254(Integer), 1459734764(Integer), bruno(String), 393(Integer), User(String), 0(Integer), Bruno Mattarollo(String), null, Sydney, Australia(String), bruno.mattarollo@gmail.com(String), 24(Integer), 5(Integer), 40(Integer), 69(Integer), 1203347704(Integer), 1459332857(Integer), revans(String), 394(Integer), User(String), 0(Integer), Robert Evans(String), Code Wranglers, Inc.(String), Boise / San Diego(String), robert@codewranglers.org(String), 82(Integer), 115(Integer), 85(Integer), 15(Integer), 1203348970(Integer), 1458136837(Integer), jameshill(String), 395(Integer), User(String), 0(Integer), James Hill(String), null, London, United Kingdom(String), null, 1(Integer), 0(Integer), 19(Integer), 13(Integer), 1203350771(Integer), 1459388583(Integer), trankas(String), 396(Integer), User(String), 0(Integer), João Estêvão(String), null, null, trankas@gmail.com(String), 8(Integer), 0(Integer), 2(Integer), 1(Integer), 1203352068(Integer), 1456497270(Integer), crafterm(String), 397(Integer), User(String), 0(Integer), Marcus Crafter(String), http://redartisan.com(String), Melbourne, Australia(String), crafterm@redartisan.com(String), 40(Integer), 12(Integer), 137(Integer), 106(Integer), 1203352381(Integer), 1459375087(Integer), mattallen(String), 398(Integer), User(String), 0(Integer), Matt Allen(String), Lookahead Seatch(String), Australia(String), matta@lookahead.com.au(String), 31(Integer), 11(Integer), 28(Integer), 0(Integer), 1203352738(Integer), 1460081354(Integer), dgoodlad(String), 399(Integer), User(String), 0(Integer), David Goodlad(String), GitHub(String), Melbourne, Australia(String), david@goodlad.net(String), 79(Integer), 15(Integer), 78(Integer), 7(Integer), 1203353581(Integer), 1458612450(Integer){}
2016-04-08 23:02:53,826 [Thread-0] DEBUG User.insertBatch - <==    Updates: 30{}
2016-04-08 23:02:53,827 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Committing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:53,829 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:53,830 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:02:53,830 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Returned connection 456004698 to pool.{}
2016-04-08 23:03:07,547 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Opening JDBC Connection{}
2016-04-08 23:03:07,548 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Checked out connection 456004698 from pool.{}
2016-04-08 23:03:07,548 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:07,548 [Thread-0] DEBUG User.insertBatch - ==>  Preparing: INSERT INTO user (login, id, type, site_admin, name, company, location, email, public_repos, public_gists, followers, following, created_at, updated_at{}
2016-04-08 23:03:07,553 [Thread-0] DEBUG User.insertBatch - ==> Parameters: esaul(String), 400(Integer), User(String), 0(Integer), null, null, null, null, 289(Integer), 9(Integer), 2(Integer), 0(Integer), 1203357651(Integer), 1458674469(Integer), wuzhe(String), 401(Integer), User(String), 0(Integer), Zhe Wu(String), Happy Iterating Inc.(String), Beijing, China(String), wu@madk.org(String), 34(Integer), 7(Integer), 57(Integer), 102(Integer), 1203357781(Integer), 1456497270(Integer), trevorturk(String), 402(Integer), User(String), 0(Integer), Trevor Turk(String), Freelance Programmer(String), Chicago, IL(String), trevorturk@gmail.com(String), 40(Integer), 109(Integer), 277(Integer), 84(Integer), 1203362636(Integer), 1457959748(Integer), svrishi(String), 403(Integer), User(String), 0(Integer), null, null, null, null, 1(Integer), 0(Integer), 2(Integer), 0(Integer), 1203362980(Integer), 1428579523(Integer), rtomayko(String), 404(Integer), User(String), 1(Integer), Ryan Tomayko(String), GitHub(String), Cleveland, OH(String), rtomayko@2ndscale.com(String), 26(Integer), 88(Integer), 1941(Integer), 100(Integer), 1203363053(Integer), 1458037504(Integer), timburks(String), 405(Integer), User(String), 0(Integer), Tim Burks(String), Google Inc.(String), Mountain View, CA(String), null, 84(Integer), 23(Integer), 375(Integer), 18(Integer), 1203366407(Integer), 1459017237(Integer), gaveen(String), 406(Integer), User(String), 0(Integer), Gaveen Prabhasara(String), null, Sri Lanka(String), null, 5(Integer), 13(Integer), 31(Integer), 19(Integer), 1203369091(Integer), 1458705511(Integer), waqas(String), 407(Integer), User(String), 0(Integer), Waqas(String), null, Lahore, Pakistan(String), null, 0(Integer), 0(Integer), 2(Integer), 0(Integer), 1203372659(Integer), 1456497270(Integer), dpetersen(String), 408(Integer), User(String), 0(Integer), Don Petersen(String), null, Bend, OR(String), don@donpetersen.net(String), 21(Integer), 51(Integer), 21(Integer), 5(Integer), 1203375372(Integer), 1457662013(Integer), marzo(String), 409(Integer), User(String), 0(Integer), Marzo(String), null, Gdansk, Poland(String), michimarzo@gmail.com(String), 9(Integer), 0(Integer), 9(Integer), 13(Integer), 1203387239(Integer), 1453424809(Integer), fivethreeo(String), 410(Integer), User(String), 0(Integer), Øyvind Saltvik(String), null, Levanger, Norway(String), oyvind.saltvik@gmail.com(String), 58(Integer), 5(Integer), 30(Integer), 9(Integer), 1203390005(Integer), 1459926176(Integer), tandibar(String), 411(Integer), User(String), 0(Integer), Andreas Bade(String), IdentPro GmbH(String), Cologne , Germany(String), andi.bade@gmail.com(String), 26(Integer), 6(Integer), 20(Integer), 21(Integer), 1203399129(Integer), 1459858295(Integer), cmer(String), 412(Integer), User(String), 0(Integer), Carl Mercier(String), VarageSale(String), Toronto, ON, Canada(String), null, 85(Integer), 34(Integer), 59(Integer), 22(Integer), 1203411061(Integer), 1459822429(Integer), trotter(String), 413(Integer), User(String), 0(Integer), Trotter Cashion(String), Riot Games(String), Santa Monica, CA(String), tcashion@riotgames.com(String), 111(Integer), 41(Integer), 129(Integer), 0(Integer), 1203412270(Integer), 1458525927(Integer), dudleyf(String), 414(Integer), User(String), 0(Integer), Dudley Flanders(String), Zero Mountain(String), null, dudley@steambone.org(String), 20(Integer), 17(Integer), 24(Integer), 1(Integer), 1203412280(Integer), 1456497271(Integer), kevinansfield(String), 415(Integer), User(String), 0(Integer), Kevin Ansfield(String), Ghost Foundation(String), Rye, East Sussex, UK(String), kevin@lookingsideways.co.uk(String), 38(Integer), 29(Integer), 26(Integer), 0(Integer), 1203412415(Integer), 1459286280(Integer), luigi(String), 417(Integer), User(String), 0(Integer), Luigi Ray-Montañez(String), null, Atlanta, GA(String), luigi.montanez@gmail.com(String), 19(Integer), 52(Integer), 82(Integer), 30(Integer), 1203412458(Integer), 1458383583(Integer), mattswasey(String), 418(Integer), User(String), 0(Integer), Matt Swasey(String), Viget Labs(String), Washington DC(String), null, 0(Integer), 0(Integer), 2(Integer), 0(Integer), 1203412502(Integer), 1428579523(Integer), gotascii(String), 419(Integer), User(String), 0(Integer), Justin Marney(String), null, San Francisco, CA(String), gotascii@gmail.com(String), 32(Integer), 24(Integer), 32(Integer), 2(Integer), 1203412550(Integer), 1458180547(Integer), rozza(String), 420(Integer), User(String), 0(Integer), Ross Lawley(String), MongoDB(String), United Kingdom(String), ross.lawley@gmail.com(String), 79(Integer), 29(Integer), 170(Integer), 24(Integer), 1203412690(Integer), 1456497271(Integer), frankbolero(String), 421(Integer), User(String), 0(Integer), Frank Bolero(String), null, Sweden(String), null, 0(Integer), 0(Integer), 13(Integer), 28(Integer), 1203413169(Integer), 1459815059(Integer), shadowmaru(String), 422(Integer), User(String), 0(Integer), Ricardo Shiota Yasuda(String), Bio Ritmo(String), São Paulo, Brazil(String), shadow11@gmail.com(String), 38(Integer), 28(Integer), 39(Integer), 16(Integer), 1203413301(Integer), 1458406977(Integer), aunderwo(String), 423(Integer), User(String), 0(Integer), Anthony Underwood(String), null, Watford, UK(String), null, 54(Integer), 12(Integer), 13(Integer), 5(Integer), 1203413453(Integer), 1458197556(Integer), dfugere(String), 424(Integer), User(String), 0(Integer), David(String), Code Genome(String), Montreal(String), null, 10(Integer), 1(Integer), 18(Integer), 22(Integer), 1203413568(Integer), 1458136609(Integer), james(String), 425(Integer), User(String), 0(Integer), James Darling(String), James Darling(String), London(String), james@abscond.org(String), 52(Integer), 30(Integer), 120(Integer), 37(Integer), 1203413641(Integer), 1459734872(Integer), xraid(String), 426(Integer), User(String), 0(Integer), xraid(String), null, null, xraid@iprobot.com(String), 4(Integer), 4(Integer), 3(Integer), 0(Integer), 1203413764(Integer), 1428579523(Integer), wijet(String), 427(Integer), User(String), 0(Integer), Mariusz Pietrzyk(String), null, null, null, 20(Integer), 4(Integer), 21(Integer), 15(Integer), 1203414562(Integer), 1460069821(Integer), parabuzzle(String), 428(Integer), User(String), 0(Integer), Mike Heijmans(String), The Niche Project(String), Campbell, CA(String), null, 63(Integer), 27(Integer), 34(Integer), 28(Integer), 1203415707(Integer), 1460039313(Integer), damienmckenna(String), 429(Integer), User(String), 0(Integer), Damien McKenna(String), null, Keene, NH(String), damien@mc-kenna.com(String), 16(Integer), 2(Integer), 21(Integer), 1(Integer), 1203416300(Integer), 1456497271(Integer), nz(String), 430(Integer), User(String), 0(Integer), Nick Zadrozny(String), One More Cloud(String), Austin, TX(String), nick@onemorecloud.com(String), 74(Integer), 95(Integer), 51(Integer), 23(Integer), 1203417572(Integer), 1458116101(Integer){}
2016-04-08 23:03:07,557 [Thread-0] DEBUG User.insertBatch - <==    Updates: 30{}
2016-04-08 23:03:07,557 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Committing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:08,082 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:08,082 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:08,082 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Returned connection 456004698 to pool.{}
2016-04-08 23:03:26,288 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Opening JDBC Connection{}
2016-04-08 23:03:26,289 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Checked out connection 456004698 from pool.{}
2016-04-08 23:03:26,289 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:26,290 [Thread-0] DEBUG User.insertBatch - ==>  Preparing: INSERT INTO user (login, id, type, site_admin, name, company, location, email, public_repos, public_gists, followers, following, created_at, updated_at{}
2016-04-08 23:03:26,295 [Thread-0] DEBUG User.insertBatch - ==> Parameters: tynino(String), 431(Integer), User(String), 0(Integer), Tyler Ferrier(String), null, null, null, 12(Integer), 1(Integer), 5(Integer), 1(Integer), 1203417864(Integer), 1456497271(Integer), allan(String), 432(Integer), User(String), 0(Integer), Allan May(String), null, de(String), mail at may.mooo.com(String), 5(Integer), 0(Integer), 3(Integer), 4(Integer), 1203418766(Integer), 1457409747(Integer), bscofield(String), 433(Integer), User(String), 0(Integer), Ben Scofield(String), null, Durham, NC(String), github@turrean.com(String), 47(Integer), 39(Integer), 59(Integer), 5(Integer), 1203419002(Integer), 1456497271(Integer), tkofol(String), 434(Integer), User(String), 0(Integer), Tim Kofol(String), S2N Health(String), Boston, MA(String), tkofol@gmail.com(String), 5(Integer), 0(Integer), 3(Integer), 1(Integer), 1203419044(Integer), 1456497271(Integer), trey(String), 435(Integer), User(String), 0(Integer), Trey Piepmeier(String), Emma(String), Greensboro, NC(String), null, 30(Integer), 173(Integer), 102(Integer), 102(Integer), 1203419077(Integer), 1458675904(Integer), jimmy(String), 436(Integer), User(String), 0(Integer), Jimmy Kittiyachavalit(String), null, San Francisco, CA(String), null, 10(Integer), 3(Integer), 37(Integer), 2(Integer), 1203419184(Integer), 1456497271(Integer), foca(String), 437(Integer), User(String), 0(Integer), Nicolás Sanguinetti(String), http://13Floor.org(String), Montevideo, Uruguay(String), hi@nicolassanguinetti.info(String), 151(Integer), 116(Integer), 294(Integer), 97(Integer), 1203419187(Integer), 1459871691(Integer), mathie(String), 438(Integer), User(String), 0(Integer), Graeme Mathieson(String), Wossname Industries(String), Plymouth, United Kingdom(String), mathie@woss.name(String), 48(Integer), 46(Integer), 71(Integer), 35(Integer), 1203419217(Integer), 1459469989(Integer), jarkko(String), 439(Integer), User(String), 0(Integer), Jarkko Laine(String), Bear Metal(String), Tampere, Finland(String), jarkko@jlaine.net(String), 45(Integer), 11(Integer), 17(Integer), 0(Integer), 1203419226(Integer), 1459819284(Integer), norbert(String), 440(Integer), User(String), 0(Integer), Norbert Crombach(String), null, null, norbert.crombach@primetheory.org(String), 55(Integer), 3(Integer), 53(Integer), 65(Integer), 1203419331(Integer), 1459863835(Integer), jduff(String), 441(Integer), User(String), 0(Integer), John Duff(String), Shopify(String), Ottawa, Ontario(String), null, 68(Integer), 13(Integer), 80(Integer), 58(Integer), 1203419432(Integer), 1459568861(Integer), gpaul(String), 442(Integer), User(String), 0(Integer), Gustav Paul(String), RailsCoZa(String), South Africa, Stellenbosch(String), gustav.paul@gmail.com(String), 29(Integer), 1(Integer), 9(Integer), 3(Integer), 1203419615(Integer), 1459635906(Integer), pablete(String), 443(Integer), User(String), 0(Integer), Pablo A. Delgado(String), null, San Francisco, CA(String), pablete@gmail.com(String), 22(Integer), 29(Integer), 65(Integer), 92(Integer), 1203420596(Integer), 1456497271(Integer), mokolabs(String), 444(Integer), User(String), 0(Integer), Patrick Crowley(String), null, San Diego, CA(String), patrick@mokolabs.com(String), 30(Integer), 22(Integer), 52(Integer), 35(Integer), 1203420802(Integer), 1459388904(Integer), awilliam(String), 445(Integer), User(String), 0(Integer), Alex Williamson(String), null, null, alex.williamson@redhat.com(String), 14(Integer), 0(Integer), 22(Integer), 0(Integer), 1203421052(Integer), 1456497271(Integer), dysinger(String), 447(Integer), User(String), 0(Integer), Tim Dysinger(String), Positive Inertia(String), Portland | Kauai(String), tim@dysinger.net(String), 60(Integer), 134(Integer), 164(Integer), 18(Integer), 1203421658(Integer), 1460081048(Integer), intabulas(String), 448(Integer), User(String), 0(Integer), Mark Lussier(String), null, Saratoga, CA(String), mlussier@gmail.com(String), 22(Integer), 16(Integer), 43(Integer), 48(Integer), 1203421681(Integer), 1458911794(Integer), avalade(String), 449(Integer), User(String), 0(Integer), Aaron D. Valade(String), null, United States(String), null, 22(Integer), 10(Integer), 12(Integer), 10(Integer), 1203422445(Integer), 1459507051(Integer), ljsc(String), 450(Integer), User(String), 0(Integer), Lou Scoras(String), Bloomberg LP(String), Washington, DC(String), null, 23(Integer), 19(Integer), 25(Integer), 18(Integer), 1203425227(Integer), 1458121125(Integer), djdarkbeat(String), 451(Integer), User(String), 0(Integer), Brian Loomis(String), http://www.customated.com(String), Boise, Idaho(String), brian@customated.com(String), 171(Integer), 15(Integer), 15(Integer), 40(Integer), 1203425549(Integer), 1459734640(Integer), yrashk(String), 452(Integer), User(String), 0(Integer), Yurii Rashkovskii(String), null, Vancouver, BC, Canada(String), yrashk@gmail.com(String), 128(Integer), 29(Integer), 405(Integer), 535(Integer), 1203425785(Integer), 1458123786(Integer), famulus(String), 453(Integer), User(String), 0(Integer), null, null, null, null, 14(Integer), 18(Integer), 25(Integer), 1(Integer), 1203425855(Integer), 1459151894(Integer), rks(String), 454(Integer), User(String), 0(Integer), Randy Souza(String), MathWorks(String), Boston, MA(String), randy@randysouza.com(String), 8(Integer), 4(Integer), 8(Integer), 7(Integer), 1203426670(Integer), 1460051000(Integer), chriskaukis(String), 455(Integer), User(String), 0(Integer), Chris(String), null, Austin, TX(String), null, 9(Integer), 1(Integer), 11(Integer), 2(Integer), 1203426895(Integer), 1459417916(Integer), caffo(String), 456(Integer), User(String), 0(Integer), Rodrigo Franco(String), LivingSocial(String), null, null, 46(Integer), 49(Integer), 220(Integer), 0(Integer), 1203427284(Integer), 1457749035(Integer), timperrett(String), 458(Integer), User(String), 0(Integer), Timothy Perrett(String), Verizon(String), Santa Clara, CA(String), null, 63(Integer), 88(Integer), 107(Integer), 17(Integer), 1203428782(Integer), 1458958515(Integer), voodootikigod(String), 459(Integer), User(String), 0(Integer), Chris Williams(String), Emerging Technology Advisors(String), Reston, VA(String), chris@eta.im(String), 117(Integer), 124(Integer), 544(Integer), 99(Integer), 1203430313(Integer), 1458576822(Integer), kwe(String), 460(Integer), User(String), 0(Integer), null, null, null, null, 16(Integer), 7(Integer), 9(Integer), 3(Integer), 1203430873(Integer), 1460032692(Integer), bernd(String), 461(Integer), User(String), 0(Integer), Bernd Ahlers(String), Graylog, Inc.(String), Hamburg/Germany(String), github@tuneafish.de(String), 82(Integer), 37(Integer), 81(Integer), 33(Integer), 1203431204(Integer), 1459559019(Integer), winson(String), 462(Integer), User(String), 0(Integer), winson(String), null, Taiwan(String), null, 0(Integer), 0(Integer), 9(Integer), 32(Integer), 1203432304(Integer), 1448312575(Integer){}
2016-04-08 23:03:26,297 [Thread-0] DEBUG User.insertBatch - <==    Updates: 30{}
2016-04-08 23:03:26,298 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Committing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:26,300 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:26,302 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:26,302 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Returned connection 456004698 to pool.{}
2016-04-08 23:03:41,310 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Opening JDBC Connection{}
2016-04-08 23:03:41,310 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Checked out connection 456004698 from pool.{}
2016-04-08 23:03:41,311 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:41,311 [Thread-0] DEBUG User.insertBatch - ==>  Preparing: INSERT INTO user (login, id, type, site_admin, name, company, location, email, public_repos, public_gists, followers, following, created_at, updated_at{}
2016-04-08 23:03:41,316 [Thread-0] DEBUG User.insertBatch - ==> Parameters: cblackburn(String), 463(Integer), User(String), 0(Integer), Chris Blackburn(String), CBlackburn Consulting Inc.(String), Kansas City, USA(String), cblackburn@cbciweb.com(String), 3(Integer), 0(Integer), 4(Integer), 3(Integer), 1203433754(Integer), 1457946322(Integer), kunstreich(String), 464(Integer), User(String), 0(Integer), Hannes Kunstreich(String), null, Berlin(String), hannes@kunstreich.name(String), 8(Integer), 8(Integer), 14(Integer), 11(Integer), 1203436638(Integer), 1459479234(Integer), emanuel(String), 465(Integer), User(String), 0(Integer), Emanuel Mota(String), Digisensei(String), Sintra, Portugal(String), emanuel.mota@gmail.com(String), 15(Integer), 0(Integer), 11(Integer), 9(Integer), 1203437554(Integer), 1457834876(Integer), cdwillie76(String), 466(Integer), User(String), 0(Integer), Chris Williams(String), null, null, chris.d.williams@gmail.com(String), 7(Integer), 4(Integer), 9(Integer), 6(Integer), 1203437762(Integer), 1456497271(Integer), mando(String), 467(Integer), User(String), 0(Integer), Mando Escamilla(String), null, Austin, TX(String), mando@mando.org(String), 52(Integer), 22(Integer), 41(Integer), 49(Integer), 1203438700(Integer), 1458785982(Integer), zh(String), 468(Integer), User(String), 0(Integer), Stoyan Zhekov(String), null, Osaka, JAPAN(String), stoyan@gmail.com(String), 38(Integer), 51(Integer), 54(Integer), 18(Integer), 1203439089(Integer), 1456497271(Integer), brandon-beacher(String), 469(Integer), User(String), 0(Integer), Brandon Beacher(String), The Wild Wild REST(String), Atlanta, GA(String), brandon.beacher@gmail.com(String), 30(Integer), 229(Integer), 17(Integer), 16(Integer), 1203439362(Integer), 1456497271(Integer), eric(String), 470(Integer), User(String), 0(Integer), Eric Lindvall(String), Papertrail(String), Seattle, WA(String), eric@5stops.com(String), 178(Integer), 161(Integer), 190(Integer), 43(Integer), 1203439554(Integer), 1459563372(Integer), iwarshak(String), 471(Integer), User(String), 0(Integer), Ian Warshak(String), null, San Antonio, TX(String), iwarshak@stripey.net(String), 36(Integer), 20(Integer), 28(Integer), 6(Integer), 1203439780(Integer), 1458698419(Integer), sudara(String), 472(Integer), User(String), 0(Integer), Sudara(String), Rubytune(String), Vienna, Austria(String), sudara@rubytune.com(String), 33(Integer), 34(Integer), 40(Integer), 1(Integer), 1203440043(Integer), 1459677324(Integer), choonkeat(String), 473(Integer), User(String), 0(Integer), Chew Choon Keat(String), null, Singapore(String), choonkeat@gmail.com(String), 61(Integer), 129(Integer), 97(Integer), 12(Integer), 1203440160(Integer), 1458514125(Integer), cbowns(String), 474(Integer), User(String), 0(Integer), Christopher Bowns(String), A Bit Confusatory(String), San Francisco, CA(String), github at my website domain(String), 51(Integer), 26(Integer), 65(Integer), 39(Integer), 1203441074(Integer), 1459251061(Integer), aussiegeek(String), 475(Integer), User(String), 0(Integer), Alan Harper(String), Clover(String), Melbourne, Australia(String), alan@aussiegeek.net(String), 62(Integer), 16(Integer), 50(Integer), 11(Integer), 1203442647(Integer), 1459894031(Integer), zacheryph(String), 476(Integer), User(String), 0(Integer), Zachery Hostens(String), null, Davenport, IA(String), zacheryph@gmail.com(String), 16(Integer), 9(Integer), 17(Integer), 22(Integer), 1203442791(Integer), 1456497271(Integer), dustym(String), 477(Integer), User(String), 0(Integer), Dusty Matthews(String), The Awl(String), New York, NY(String), dustym@gmail.com(String), 2(Integer), 11(Integer), 25(Integer), 16(Integer), 1203443102(Integer), 1459931752(Integer), benjamin(String), 478(Integer), User(String), 0(Integer), Benjamin Birnbaum(String), null, Melbourne, Australia(String), benjamin@wobolando.com(String), 4(Integer), 1(Integer), 7(Integer), 3(Integer), 1203449936(Integer), 1459769301(Integer), jackdempsey(String), 479(Integer), User(String), 0(Integer), jack dempsey(String), Instacart(String), San Francisco, CA(String), jack.dempsey@gmail.com(String), 174(Integer), 194(Integer), 73(Integer), 5(Integer), 1203452978(Integer), 1458832575(Integer), blahutka(String), 480(Integer), User(String), 0(Integer), bp-czech(String), null, bp-czech(String), null, 35(Integer), 22(Integer), 8(Integer), 0(Integer), 1203461127(Integer), 1458177202(Integer), chrisabad(String), 481(Integer), User(String), 0(Integer), Chris Abad(String), null, Clayton, CA(String), chrisabad@gmail.com(String), 2(Integer), 0(Integer), 5(Integer), 1(Integer), 1203463784(Integer), 1456497271(Integer), Squeegy(String), 482(Integer), User(String), 0(Integer), Alex Wayne(String), The Wine Spies(String), Sebastopol, CA(String), null, 39(Integer), 64(Integer), 34(Integer), 0(Integer), 1203464283(Integer), 1458611701(Integer), nakajima(String), 483(Integer), User(String), 1(Integer), Pat Nakajima(String), null, San Francisco(String), patnakajima@gmail.com(String), 119(Integer), 194(Integer), 588(Integer), 115(Integer), 1203467746(Integer), 1457749343(Integer), mreid(String), 484(Integer), User(String), 0(Integer), Mark Reid(String), The Australian National University(String), Canberra, Australia(String), null, 22(Integer), 13(Integer), 59(Integer), 9(Integer), 1203477127(Integer), 1458267264(Integer), melo(String), 485(Integer), User(String), 0(Integer), Pedro Melo(String), null, Figueira da Foz, Portugal(String), melo@simplicidade.org(String), 181(Integer), 56(Integer), 220(Integer), 164(Integer), 1203482588(Integer), 1458446519(Integer), JESii(String), 486(Integer), User(String), 0(Integer), Jon Seidel(String), EDP Consulting, Inc.(String), http://www.edpci.com(String), jseidel@edpci.com(String), 40(Integer), 8(Integer), 7(Integer), 1(Integer), 1203483693(Integer), 1458545509(Integer), msimkins(String), 487(Integer), User(String), 0(Integer), Mike Simkins(String), null, London, England(String), null, 23(Integer), 0(Integer), 8(Integer), 2(Integer), 1203484060(Integer), 1458226831(Integer), angelo(String), 488(Integer), User(String), 0(Integer), Angelo Simeoni(String), null, Providence, RI(String), angelo@cssboy.com(String), 7(Integer), 5(Integer), 26(Integer), 29(Integer), 1203484750(Integer), 1458292885(Integer), wrenchlabs(String), 489(Integer), Organization(String), 0(Integer), Wrench Labs(String), null, Charlotte, NC(String), null, 1(Integer), 0(Integer), 0(Integer), 0(Integer), 1203487179(Integer), 1456497271(Integer), jfcouture(String), 490(Integer), User(String), 0(Integer), Jean-Francois Couture(String), null, Montreal(String), jfcouture@gmail.com(String), 9(Integer), 0(Integer), 21(Integer), 10(Integer), 1203491660(Integer), 1457605464(Integer), ctran(String), 491(Integer), User(String), 0(Integer), Cuong Tran(String), null, San Diego, CA(String), cuong.tran@gmail.com(String), 31(Integer), 15(Integer), 30(Integer), 1(Integer), 1203493695(Integer), 1459451467(Integer), garyharan(String), 492(Integer), User(String), 0(Integer), Gary Haran(String), Contracting(String), Montreal, QC, Canada(String), gary.haran@gmail.com(String), 58(Integer), 28(Integer), 78(Integer), 48(Integer), 1203494867(Integer), 1459331043(Integer){}
2016-04-08 23:03:41,319 [Thread-0] DEBUG User.insertBatch - <==    Updates: 30{}
2016-04-08 23:03:41,320 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Committing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:41,329 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:41,329 [Thread-0] DEBUG org.apache.ibatis.transaction.jdbc.JdbcTransaction - Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@1b2e145a]{}
2016-04-08 23:03:41,330 [Thread-0] DEBUG org.apache.ibatis.datasource.pooled.PooledDataSource - Returned connection 456004698 to pool.{}
